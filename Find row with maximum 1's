class Solution {
   public:
    int lowerBound(vector<int> arr, int n, int x) {
        int low = 0, high = n - 1, ans = n;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (arr[mid] >= x) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
    int rowWithMax1s(vector<vector<int>>& mat) {
        int count = 0, index = -1, n = mat[0].size();
        for (int i(0); i < mat.size(); i++) {
            sort(mat[i].begin(), mat[i].end());

            int it = lowerBound(mat[i], n , 1);

            int ones = n - it;
            if (ones > count) {
                count = ones; index = i;
            }
        }

        return index;
    }
};
