class Solution {
public:
    void swapno(vector<int>& nums1,int m,vector<int>& nums2,int n){
        if(nums1[m] > nums2[n]) swap(nums1[m], nums2[n]);
    }
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int len(n + m); int gap = (len / 2) + (len % 2);
        while(gap > 0){
            int left = 0;
            int right = left + gap;
            
            while(right < len){
                if(left < n and right >= n){
                    swapno(nums1, left, nums2, right - n);
                }
                else if(left >= n){
                    swapno(nums1, left - n, nums2, right - n);
                }
                else swapno(nums1, left, nums2, right);
            }

            if(gap == 1) break;
            gap = (gap / 2) + (gap % 2);
        }
    }
};
