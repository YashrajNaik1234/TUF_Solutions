class Solution {
public:
    ListNode* merge(ListNode* list1, ListNode* list2){
        ListNode* dummy = new ListNode(-1);
        ListNode* res = dummy;

        while(list1 and list2){
            if(list1 -> val < list2 -> val){
                res -> child = list1;
                res = list1;
                list1 = list1 -> child;
            }
            else{
                res -> child = list2;
                res = list2;
                list2 = list2 -> child;
            }

            res -> next = nullptr;
        }

        if(list1) res -> child = list1;
        else res -> child = list2;
        if(dummy -> child) dummy -> child -> next == nullptr;
        return dummy -> child;
    }
    ListNode* flattenLinkedList(ListNode* &head) {
        if(!head or !(head -> next)) return head;

        ListNode* mergeHead = flattenLinkedList(head -> next);
        head = merge(head, mergeHead);
        return head;
    }
};
