class Solution {
   public:
    int cal(vector<int> &v, long double mid) {
        int cnt(1);

        for (int i(1); i < v.size(); i++) {
            int no = (v[i] - v[i - 1]) / mid;
            if((v[i] - v[i - 1]) / mid == no * mid) no--;
            else cnt += no;
        }

        return cnt;
    }
    long double minimiseMaxDistance(vector<int> &arr, int k) {
        long double left(0), right(0);

        for(int i(0);i < arr.size() - 1;i++){
            right = max(right ,(long double)(arr[i + 1] - arr[i]));
        }
        
        long double diff = 1e-6;
        while (right - left > diff) {
            long double mid = (right + left) / 2.0;

            if (cal(arr, mid) <= k)  right = mid;
            else left = mid;
        }
 
        return right;
    }
};
